apiVersion: v1
kind: Secret
metadata:
  name: feedbackhub-secrets
  namespace: feedbackhub-production
type: Opaque
data:
  # Base64 encoded values - update these with your actual credentials
  # Use: echo -n "your-value" | base64
  mongodb-uri: bW9uZ29kYitzcnY6Ly91c2VybmFtZTpwYXNzd29yZEBjbHVzdGVyLm1vbmdvZGIubmV0L2ZlZWRiYWNraHViP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eQ==
  mongodb-password: eW91ci1tb25nb2RiLXBhc3N3b3Jk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: feedbackhub-config
  namespace: feedbackhub-production
data:
  NODE_ENV: "production"
  PORT: "3000"
  NEXT_TELEMETRY_DISABLED: "1"
  AWS_REGION: "ap-south-1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: feedbackhub
  namespace: feedbackhub-production
  labels:
    app: feedbackhub
spec:
  replicas: 3
  selector:
    matchLabels:
      app: feedbackhub
  template:
    metadata:
      labels:
        app: feedbackhub
    spec:
      containers:
      - name: feedbackhub
        image: your-account-id.dkr.ecr.ap-south-1.amazonaws.com/feedbackhub:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: feedbackhub-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: feedbackhub-config
              key: PORT
        - name: NEXT_TELEMETRY_DISABLED
          valueFrom:
            configMapKeyRef:
              name: feedbackhub-config
              key: NEXT_TELEMETRY_DISABLED
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: feedbackhub-config
              key: AWS_REGION
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: feedbackhub-secrets
              key: mongodb-uri
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: feedbackhub-secrets
              key: mongodb-password
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: feedbackhub
  namespace: feedbackhub-production
  labels:
    app: feedbackhub
spec:
  selector:
    app: feedbackhub
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: feedbackhub
  namespace: feedbackhub-production
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
  - host: feedbackhub.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: feedbackhub
            port:
              number: 3000
